#!/bin/bash

cachedir=~/.cache/media-art # Location of Banshee album art cache

# Accepts a valid Banshee query type, returns the trimmed result
trimQuery() # query
{
  query="$1"

  # Get complete fields output, keep the only field that matches exactly
  str="$(banshee --query-all | grep ^$query:)"
  # Trim away the key and keep the data
  result=${str#$query: }

  printf "%s" "$result"
}

getState()
{
  state="$(trimQuery current-state)"

  stateStr="["
  if [[ $state == "playing" ]]; then
    stateStr+="▶"
  elif [[ $state == "paused" ]]; then
    stateStr+="Ⅱ"
  elif [[ $state == "idle" ]]; then
    stateStr+="◼"
  else
    stateStr+="?"
  fi
  stateStr+="]"

  printf "%s" "$stateStr"
}

getRating()
{
  rating="$(trimQuery rating)"

  if [[ $rating == "" ]]; then
    rating="0"
  fi

  printf "%s" $rating
}

getRatingStars()
{
  rating="$(getRating)"

  starsStr=""
  i=0
  while [[ $i < $rating ]]; do
    starsStr+="★"
    let i+=1
  done

  while [[ $i < 5 ]]; do
    starsStr+="☆"
    let i+=1
  done
  printf "%s" "$starsStr"
}

# Accepts a string of the form "x","+x", or "-x" and either sets this to the new rating or adds this to the existing rating
setRating() # usrVal
{
  usrVal="$1"

  oldRating="$(getRating)"

  if [[ ${usrVal:0:1} == "+" || ${usrVal:0:1} == "-" ]]; then
    let newRating=oldRating+usrVal
  else
    newRating=usrVal
  fi

  banshee --set-rating=$newRating
}

getArt()
{
  artworkID="$(trimQuery artwork-id)"

  if [[ -e "$cachedir/$artworkID.jpg" ]]; then
    printf "%s" "$cachedir/$artworkID.jpg"
  else # Employ fallback solution
    printf "%s" "media-player-banshee" # Stock Banshee icon
  fi
}

getTrackDisc()
{
  # Banshee bug (?): query-disc always returns empty string, even when disc number and count fields are set
  # 2015-11-25 - Solution has been found: Use query-all

  trackNumber="$(trimQuery track-number)"
  trackCount="$(trimQuery track-count)"
  discNumber="$(trimQuery disc-number)"
  discCount="$(trimQuery disc-count)"

  retStr=""

  if [[ "$trackNumber" != "" ]]; then
    retStr+="("
    retStr+="$trackNumber"
    if [[ "$trackCount" != "" ]]; then
      retStr+="/"
      retStr+="$trackCount"
    fi
    retStr+=")"
  fi
  if [[ "$discNumber" != "" ]]; then
    retStr+=" ("
    retStr+="$discNumber"
    if [[ "$discCount" != "" ]]; then
      retStr+="/"
      retStr+="$discCount"
    fi
    retStr+=")"
  fi

  printf "%s" "$retStr"
}

notify()
{
  art="$(getArt)"
  # printf "\n%s\n" "The art filepath is: $art" # debug
  state="$(getState)"
  rating="$(getRatingStars)"
  trackDisc="$(getTrackDisc)"

  title="$(trimQuery title)"

  artist="$(trimQuery artist)"
  album="$(trimQuery album)"
  info="$(printf "%s\n%s" "by $artist" "from $album")"

  notify-send -i "$art" -t 2 -h int:transient:1 "$state $rating $trackDisc $title" "$info"
}

# program
  if [[ "$1" == "-n" ]]; then
    notify
  elif [[ "$1" == "-r" ]]; then
    setRating "$2"
    notify
  fi
# end program
#!/bin/bash

# Dependencies:
#   ImageMagick (for image resizing)
#   python - gio, sys
#   ffmpeg

tmpdir="/tmp/banshee-wrapper" # Should never contain more than one file

# Accepts a valid Banshee query type, returns the trimmed result
trimQuery() # query
{
  query="$1"

  # Use the pipe through sed to turn % into %%, since printf interprets % as a different sort of control char and %% as a single escaped %
  str="$(banshee --query-$query | sed "s/%/%%/g")"
  result="${str#$query: }" # How put above line in place of str?

  printf "$result"
}

getRating()
{
  rating="$(trimQuery rating)"

  if [[ $rating == "" ]]; then
    rating="0"
  fi

  printf $rating
}

getRatingStars()
{
  rating="$(getRating)"

  starsStr=""
  i=0
  while [[ $i < $rating ]]; do
    starsStr+="★"
    let i+=1
  done

  while [[ $i < 5 ]]; do
    starsStr+="☆"
    let i+=1
  done
  printf "$starsStr"
}

# Accepts a string of the form "x","+x", or "-x" and either sets this to the new rating or adds this to the existing rating
setRating() # usrVal
{
  usrVal="$1"

  oldRating="$(getRating)"

  if [[ ${usrVal:0:1} == "+" || ${usrVal:0:1} == "-" ]]; then
    let newRating=oldRating+usrVal
  else
    newRating=usrVal
  fi

  banshee --set-rating=$newRating
}

getArt()
{
  fullpath="$(python -c 'import gio,sys; print(gio.File(sys.argv[1]).get_path())' $(trimQuery uri))" # Important: no quotes around the $uri arg to python

  if [[ -e "$tmpdir" ]]; then
    oldFilename="$(ls "$tmpdir")"
  else
    mkdir "$tmpdir"
    oldFilename=""
  fi

  newFilename="$(basename "$fullpath")"
  newFilename="${newFilename%.*}.png" # Remove shortest match of ".*" and replace with ".png"

  # Check against existing art, to see if song has not changed
  if [[ "$oldFilename" == "$newFilename" ]]; then
    printf "$tmpdir/$oldFilename"
  else
    # Delete old art
    rm -f "$tmpdir/$oldFilename"

    # Try get new art
    ffmpeg -i "$fullpath" "$tmpdir/$newFilename"

    # Check if extraction successful
    if [[ -e "$tmpdir/$newFilename" ]]; then
      # convert "$tmpdir/$newFilename" -resize 64x64 "$tmpdir/$newFilename" # Is this really necessary?
      printf "$tmpdir/$newFilename"
    else
      printf media-player-banshee # Stock Banshee icon
    fi
  fi
}

getTrackDisc()
{
  # NOTE: Banshee bug (?), query-disc always returns empty string, even when disc number and count fields are set

  trackNumber="$(trimQuery track-number)"
  trackCount="$(trimQuery track-count)"
  disc="$(trimQuery disc)"

  retStr=""

  if [[ "$trackNumber" != "" ]]; then
    retStr+="("
    retStr+="$trackNumber"
    if [[ "$trackCount" != "" ]]; then
      retStr+="/"
      retStr+="$trackCount"
    fi
    retStr+=")"
    if [[ "$disc" != "" ]]; then
      retStr+=" "
    fi
  fi
  if [[ "$disc" != "" ]]; then
    retStr+="[$disc]"
  fi

  printf "$retStr"
}

notify()
{
  art="$(getArt)"
  # printf "\n $art \n" # debug
  rating="$(getRatingStars)"
  trackDisc="$(getTrackDisc)"

  title="$(trimQuery title)"

  artist="$(trimQuery artist)"
  album="$(trimQuery album)"
  info="$(printf "by $artist\nfrom $album")"

  notify-send -i "$art" -t 2 -h int:transient:1 "$rating $trackDisc $title" "$info"
}

# program
  if [[ "$1" == "-n" ]]; then
    notify
  elif [[ "$1" == "-r" ]]; then
    setRating "$2"
    notify
  fi
# end program